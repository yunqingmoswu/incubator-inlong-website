"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5215],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return h}});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=n.createContext({}),u=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(o),h=r,d=m["".concat(c,".").concat(h)]||m[h]||s[h]||a;return o?n.createElement(d,i(i({ref:t},p),{},{components:o})):n.createElement(d,i({ref:t},p))}));function h(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=o[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},91422:function(e,t,o){o.r(t),o.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var n=o(87462),r=o(63366),a=(o(67294),o(3905)),i=["components"],l={title:"How to Commit",sidebar_position:2},c=void 0,u={unversionedId:"how-to-commit",id:"how-to-commit",title:"How to Commit",description:"Apache InLong uses github's Pull Request (PR) to receive contributed code. This document will introduce the process of code commit in detail.",source:"@site/community/how-to-commit.md",sourceDirName:".",slug:"/how-to-commit",permalink:"/community/how-to-commit",draft:!1,editUrl:"https://github.com/apache/incubator-inlong-website/edit/master/community/how-to-commit.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"How to Commit",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"How to Contribute",permalink:"/community/how-to-contribute"},next:{title:"How to subscribe mail list",permalink:"/community/how-to-subscribe"}},p={},s=[{value:"Fork the repository",id:"fork-the-repository",level:2},{value:"Configure git and commit changes",id:"configure-git-and-commit-changes",level:2},{value:"Clone your fork to your local machine",id:"clone-your-fork-to-your-local-machine",level:3},{value:"Add apache/incubator-inlong to local repository&#39;s remote branch upstream",id:"add-apacheincubator-inlong-to-local-repositorys-remote-branch-upstream",level:3},{value:"Check remote repository settings",id:"check-remote-repository-settings",level:3},{value:"Fetch code from upstream and update the local master branch code to the latest",id:"fetch-code-from-upstream-and-update-the-local-master-branch-code-to-the-latest",level:3},{value:"Create a new branch",id:"create-a-new-branch",level:3},{value:"Commit code to remote branch",id:"commit-code-to-remote-branch",level:3},{value:"Open a Pull Request",id:"open-a-pull-request",level:2},{value:"Open your github repository page",id:"open-your-github-repository-page",level:3},{value:"Switch branch",id:"switch-branch",level:3},{value:"New pull request",id:"new-pull-request",level:3},{value:"Click <code>Create pull request</code> button to open a PR",id:"click-create-pull-request-button-to-open-a-pr",level:3},{value:"Code Review",id:"code-review",level:2}],m={toc:s};function h(e){var t=e.components,o=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Apache InLong uses github's Pull Request (PR) to receive contributed code. This document will introduce the process of code commit in detail."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"InLong code base\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-inlong"},"https://github.com/apache/incubator-inlong"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"InLong website base\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-inlong-website"},"https://github.com/apache/incubator-inlong-website")))),(0,a.kt)("h2",{id:"fork-the-repository"},"Fork the repository"),(0,a.kt)("p",null,"Open ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-inlong"},"apache/incubator-inlong")," 's github page, clicking on the ",(0,a.kt)("inlineCode",{parentName:"p"},"fork")," button at the top right to fork."),(0,a.kt)("h2",{id:"configure-git-and-commit-changes"},"Configure git and commit changes"),(0,a.kt)("h3",{id:"clone-your-fork-to-your-local-machine"},"Clone your fork to your local machine"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/<your_github_name>/incubator-inlong.git\n")),(0,a.kt)("p",null,"After clone is completed, ",(0,a.kt)("inlineCode",{parentName:"p"},"origin")," will linked to the remote fork address on github by default."),(0,a.kt)("h3",{id:"add-apacheincubator-inlong-to-local-repositorys-remote-branch-upstream"},"Add apache/incubator-inlong to local repository's remote branch upstream"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd  incubator-inlong\ngit remote add upstream https://github.com/apache/incubator-inlong.git\n")),(0,a.kt)("h3",{id:"check-remote-repository-settings"},"Check remote repository settings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git remote -v\norigin    https://github.com/<your_github_name>/incubator-inlong.git (fetch)\norigin    https://github.com/<your_github_name>/incubator-inlong.git(push)\nupstream  https://github.com/apache/incubator-inlong.git (fetch)\nupstream  https://github.com/apache/incubator-inlong.git (push)\n")),(0,a.kt)("p",null,"There will be two repositories: ",(0,a.kt)("inlineCode",{parentName:"p"},"origin")," (own repository) and ",(0,a.kt)("inlineCode",{parentName:"p"},"upstream")," (official repository)."),(0,a.kt)("h3",{id:"fetch-code-from-upstream-and-update-the-local-master-branch-code-to-the-latest"},"Fetch code from upstream and update the local master branch code to the latest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git fetch upstream\ngit pull upstream master\n")),(0,a.kt)("h3",{id:"create-a-new-branch"},"Create a new branch"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Generally, issue id is used as the branch name, such as: INLONG-123")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git checkout -b INLONG-123\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Make sure that the branch ",(0,a.kt)("inlineCode",{parentName:"strong"},"INLONG-123")," is building successfully on the latest code of the official master branch")),(0,a.kt)("p",null,"After the branch is created, you can start coding."),(0,a.kt)("h3",{id:"commit-code-to-remote-branch"},"Commit code to remote branch"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The format of the commit message must be consistent with the issue title and start with ",(0,a.kt)("inlineCode",{parentName:"p"},"[issue id]"),", such as ",(0,a.kt)("inlineCode",{parentName:"p"},"[INLONG-123] xxx"),":"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'git commit -a -m "[INLONG-123] xxx"\ngit push origin INLONG-123\n'))),(0,a.kt)("h2",{id:"open-a-pull-request"},"Open a Pull Request"),(0,a.kt)("h3",{id:"open-your-github-repository-page"},"Open your github repository page"),(0,a.kt)("p",null,"   ",(0,a.kt)("inlineCode",{parentName:"p"},"https://github.com/<your_github_name>/incubator-inlong")),(0,a.kt)("h3",{id:"switch-branch"},"Switch branch"),(0,a.kt)("p",null,"   Switch to committed branch ",(0,a.kt)("inlineCode",{parentName:"p"},"INLONG-123")),(0,a.kt)("h3",{id:"new-pull-request"},"New pull request"),(0,a.kt)("p",null,"   Click ",(0,a.kt)("inlineCode",{parentName:"p"},"New pull request")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Compare & pull request")),(0,a.kt)("h3",{id:"click-create-pull-request-button-to-open-a-pr"},"Click ",(0,a.kt)("inlineCode",{parentName:"h3"},"Create pull request")," button to open a PR"),(0,a.kt)("p",null,"   Considerations when opening a pull request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  1. The title of PR must start with issue id, which is better consistent with the commit message\n  2. You can fill in some description information or not\n  3. If a code conflict is prompted after clicking `Create pull request` , please synchronize the code of the `INLONG-123` branch with the master branch and commit it\n")),(0,a.kt)("h2",{id:"code-review"},"Code Review"),(0,a.kt)("p",null,"After creating PR, everyone can review your code and may discuss some implementation details with you, and you may need to modify them further."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Generally, the PR can be formally merged into the code base only after more than 2 PPMC/Committer reply + 1.")),(0,a.kt)("p",null,"Finally, congratulations on becoming an official contributor to InLong!"))}h.isMDXComponent=!0}}]);