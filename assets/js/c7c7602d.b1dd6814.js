"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2115],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return p}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),f=u(r),p=o,m=f["".concat(l,".").concat(p)]||f[p]||d[p]||s;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<s;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},63905:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return d}});var n=r(87462),o=r(63366),s=(r(67294),r(3905)),i=["components"],a={title:"Overview",sidebar_position:1},l="overview",u={unversionedId:"modules/sort/overview",id:"version-1.1.0/modules/sort/overview",title:"Overview",description:"Inlong-sort is used to extract data from different source systems, then transforms the data and finally loads the data into diffrent storage systems.",source:"@site/versioned_docs/version-1.1.0/modules/sort/overview.md",sourceDirName:"modules/sort",slug:"/modules/sort/overview",permalink:"/docs/modules/sort/overview",draft:!1,editUrl:"https://github.com/apache/incubator-inlong-website/edit/master/versioned_docs/version-1.1.0/modules/sort/overview.md",tags:[],version:"1.1.0",sidebarPosition:1,frontMatter:{title:"Overview",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"TubeMQ VS Kafka",permalink:"/docs/modules/tubemq/tubemq_perf_test_vs_Kafka"},next:{title:"Deployment",permalink:"/docs/modules/sort/quick_start"}},c={},d=[{value:"supported sources",id:"supported-sources",level:2},{value:"supported storages",id:"supported-storages",level:2},{value:"limitations",id:"limitations",level:2},{value:"future plans",id:"future-plans",level:2},{value:"More kinds of source systems",id:"more-kinds-of-source-systems",level:3},{value:"More kinds of storage systems",id:"more-kinds-of-storage-systems",level:3},{value:"More kinds of file format in hive sink",id:"more-kinds-of-file-format-in-hive-sink",level:3}],f={toc:d};function p(e){var t=e.components,r=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"overview"},"overview"),(0,s.kt)("p",null,"Inlong-sort is used to extract data from different source systems, then transforms the data and finally loads the data into diffrent storage systems.\nInlong-sort is simply an Flink application, and relys on Inlong-manager to manage meta data(such as the source informations and storage informations)"),(0,s.kt)("h1",{id:"features"},"features"),(0,s.kt)("h2",{id:"supported-sources"},"supported sources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"pulsar")),(0,s.kt)("h2",{id:"supported-storages"},"supported storages"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"hive\uff08Currently we support parquet, orc and text file format\uff09"),(0,s.kt)("li",{parentName:"ul"},"kafka"),(0,s.kt)("li",{parentName:"ul"},"clickhouse"),(0,s.kt)("li",{parentName:"ul"},"iceberg")),(0,s.kt)("h2",{id:"limitations"},"limitations"),(0,s.kt)("p",null,"Currently, we just support extracting specified fields in the stage of ",(0,s.kt)("strong",{parentName:"p"},"Transform"),"."),(0,s.kt)("h2",{id:"future-plans"},"future plans"),(0,s.kt)("h3",{id:"more-kinds-of-source-systems"},"More kinds of source systems"),(0,s.kt)("p",null,"kafka and etc"),(0,s.kt)("h3",{id:"more-kinds-of-storage-systems"},"More kinds of storage systems"),(0,s.kt)("p",null,"Hbase, Elastic Search, and etc"),(0,s.kt)("h3",{id:"more-kinds-of-file-format-in-hive-sink"},"More kinds of file format in hive sink"),(0,s.kt)("p",null,"sequence file"))}p.isMDXComponent=!0}}]);