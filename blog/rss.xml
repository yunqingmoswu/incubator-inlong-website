<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Apache Inlong Blog</title>
        <link>https://inlong.apache.org/blog</link>
        <description>Apache Inlong Blog</description>
        <lastBuildDate>Wed, 22 Jun 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Release InLong 1.2.0]]></title>
            <link>https://inlong.apache.org/blog/2022/06/22/release-1.2.0</link>
            <guid>/2022/06/22/release-1.2.0</guid>
            <pubDate>Wed, 22 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.
InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="120-features-overview">1.2.0 Features Overview<a class="hash-link" href="#120-features-overview" title="Direct link to heading">​</a></h2><p><strong>The just-released 1.2.0-incubating version closes about 410+ issues, contains 30+ features and 190+ optimizations.</strong>
Mainly include the following:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhance-management-and-control-capabilities">Enhance management and control capabilities<a class="hash-link" href="#enhance-management-and-control-capabilities" title="Direct link to heading">​</a></h3><ul><li>Dashboard and Manager add cluster management capabilities</li><li>Dashboard optimizes the flow creation process</li><li>Manager supports plug-in extension of MQ</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extended-collection-node">Extended collection node<a class="hash-link" href="#extended-collection-node" title="Direct link to heading">​</a></h3><ul><li>Support for collecting data in Pulsar</li><li>Support data collection in MongoDB-CDC</li><li>Support data collection in MySQL-CDC</li><li>Support data collection in Oracle-CDC</li><li>Support data collection in PostgreSQL-CDC</li><li>Support data collection in SQLServer-CDC</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extended-write-node">Extended write node<a class="hash-link" href="#extended-write-node" title="Direct link to heading">​</a></h3><ul><li>Support for writing data to Kafka</li><li>Support for writing data to HBase</li><li>Support for writing data to PostgreSQL</li><li>Support for writing data to Oracle</li><li>Supports writing data to MySQL</li><li>Support writing data to TDSQL-PostgreSQL</li><li>Support for writing data to Greenplum</li><li>Supports writing data to SQLServer</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-data-conversion">Support data conversion<a class="hash-link" href="#support-data-conversion" title="Direct link to heading">​</a></h3><ul><li>Support String Split</li><li>Support String Regular Replace</li><li>Support String Regular Replace First Matched Value</li><li>Support Data Filter</li><li>Support Data Distinct</li><li>Support Regular Join</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhanced-system-monitoring-function">Enhanced system monitoring function<a class="hash-link" href="#enhanced-system-monitoring-function" title="Direct link to heading">​</a></h3><ul><li>Support the reporting and management of data link heartbeat</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-optimizations">Other optimizations<a class="hash-link" href="#other-optimizations" title="Direct link to heading">​</a></h3><ul><li>Supports the delivery of DataProxy multi-cluster configurations</li><li>GitHub Action check, pipeline optimization</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="120-features-details">1.2.0 Features Details<a class="hash-link" href="#120-features-details" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-multi-cluster-management">Support multi-cluster management<a class="hash-link" href="#support-multi-cluster-management" title="Direct link to heading">​</a></h3><p>Manager adds cluster management function, supports multi-cluster configuration, and solves the limitation that only one set of clusters can be defined through configuration files.
Users can create different types of clusters on Dashboard as needed.</p><p>The multi-cluster feature is mainly designed and implemented by @healchow, @luchunliang, @leezng, thanks to three contributors.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhanced-collection-of-file-data-and-mysql-binlog">Enhanced collection of file data and MySQL Binlog<a class="hash-link" href="#enhanced-collection-of-file-data-and-mysql-binlog" title="Direct link to heading">​</a></h3><p>Version 1.2.0 supports collecting complete file data, and also supports collecting data from the specified Binlog location in MySQL. This part of the work was done by @Greedyu.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-whole-database-migration">Support whole database migration<a class="hash-link" href="#support-whole-database-migration" title="Direct link to heading">​</a></h3><p>Sort supports migration of data across the entire database, contributed by @EMsnap.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supports-writing-data-in-canal-format">Supports writing data in Canal format<a class="hash-link" href="#supports-writing-data-in-canal-format" title="Direct link to heading">​</a></h3><p>Support for writing data in Canal format to Kafka, contributed by @thexiay.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimize-the-http-request-method-in-manager-client">Optimize the HTTP request method in Manager Client<a class="hash-link" href="#optimize-the-http-request-method-in-manager-client" title="Direct link to heading">​</a></h3><p>Optimized the way of executing HTTP requests in Manager Client, and added unit tests for Client, which reduces maintenance costs while reducing duplication of code.
This feature was contributed by new contributor @leosanqing.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supports-running-sql-scripts">Supports running SQL scripts<a class="hash-link" href="#supports-running-sql-scripts" title="Direct link to heading">​</a></h3><p>Sort supports running SQL scripts, see <a href="https://github.com/apache/inlong/issues/4405" target="_blank" rel="noopener noreferrer">INLONG-4405</a>, thanks to @gong for contributing this feature.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-the-reporting-and-management-of-data-link-heartbeat">Support the reporting and management of data link heartbeat<a class="hash-link" href="#support-the-reporting-and-management-of-data-link-heartbeat" title="Direct link to heading">​</a></h3><p>This version supports the heartbeat reporting and management of data grouping, data flow and underlying components, which is the premise of the state management of each link of the subsequent system.</p><p>This feature was primarily designed and contributed by @baomingyu, @healchow and @kipshi.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-supports-the-creation-of-resources-in-multiple-flow-directions">Manager supports the creation of resources in multiple flow directions<a class="hash-link" href="#manager-supports-the-creation-of-resources-in-multiple-flow-directions" title="Direct link to heading">​</a></h3><p>In version 1.2.0, Manager added the creation of some storage resources:</p><ul><li>Create Topic for Kafka (contributed by @woofyzhao)</li><li>Create databases and tables for Iceberg (contributed by @woofyzhao)</li><li>Create namespaces and tables for HBase (contributed by @woofyzhao)</li><li>Create databases and tables for ClickHouse (contributed by @lucaspeng12138)</li><li>Create indices for Elasticsearch (contributed by @lucaspeng12138)</li><li>Create databases and tables for PostgreSQL (contributed by @baomingyu)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-supports-lightweight-architecture">Sort supports lightweight architecture<a class="hash-link" href="#sort-supports-lightweight-architecture" title="Direct link to heading">​</a></h3><p>Version 1.2.0 of Sort has done a lot of refactoring and improvements.
By introducing Flink-CDC, it supports a variety of Extract and Load nodes, and also supports data transformation (ie Transform).</p><p>This feature contains many sub-features. The main developers are:
@baomingyu, @EMsnap, @GanfengTan, @gong, @lucaspeng12138, @LvJiancheng, @kipshi, @thexiay, @woofyzhao, @yunqingmoswu, thank you all for your contributions.</p><p>For more information, please refer to: <a href="/blog/2022/06/16/inlong-sort-etl">Analysis of InLong Sort ETL Solution</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-features-and-bug-fixes">Other features and bug fixes<a class="hash-link" href="#other-features-and-bug-fixes" title="Direct link to heading">​</a></h3><p>For related content, please refer to the <a href="https://github.com/apache/inlong/blob/master/CHANGES.md" target="_blank" rel="noopener noreferrer">Release Notes</a>, which details the features, enhancements and bug fixes of this release.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlong-follow-up-planning">Apache InLong follow-up planning<a class="hash-link" href="#apache-inlong-follow-up-planning" title="Direct link to heading">​</a></h2><p>In subsequent versions, we will expand more data sources and storages to cover more usage scenarios, and gradually improve the usability and robustness of the system, including:</p><ul><li>Heartbeat report of each component</li><li>Status management of data flow</li><li>Full link audit support for writing to ClickHouse</li><li>Expand more types of acquisition nodes and storage nodes</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Analysis of InLong Sort ETL Solution]]></title>
            <link>https://inlong.apache.org/blog/2022/06/16/inlong-sort-etl</link>
            <guid>/2022/06/16/inlong-sort-etl</guid>
            <pubDate>Thu, 16 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Background]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-background">1. Background<a class="hash-link" href="#1-background" title="Direct link to heading">​</a></h2><p>With the increasing number of users and developers of Apache InLong(incubating), the demand for richer usage scenarios and low-cost operation is getting stronger and stronger. Among them, the demand for adding Transform (T) to the whole link of InLong has received the most feedback. After the research and design of @yunqingmoswu, @EMsnap, @gong, @thexiay community developers, the InLong Sort ETL solution based on Flink SQL has been completed. This article will introduce the implementation details of the solution in detail.</p><p>Firstly, based on Apache Flink SQL, there are mainly the following considerations：</p><ul><li>Flink SQL has high scalability and flexibility brought about by its powerful expression ability. Basically, Flink SQL can support most demand scenarios in the community. When the built-in functions of Flink SQL do not meet the requirements, we can also extend them through various UDFs.</li><li>Compared with the implementation of the underlying API of Flink, the development cost of Flink SQL is lower. Only for the first time, the conversion logic of Flink SQL needs to be implemented. In the future, we can focus on the construction of the ability of Flink SQL, such as the extension connector and the UDF.</li><li>In general, Flink SQL will be more robust and run more stable. The reason is that Flink SQL shields a lot of the underlying details of Flink, has strong community support, and has been practiced by a large number of users.</li><li>For users, Flink SQL is also easier to understand, especially for users who have used SQL, the usage is simple and familiar, which helps users to land quickly.</li><li>For the migration of existing real-time tasks, if they are originally SQL-type tasks, especially Flink SQL tasks, the migration cost is extremely low, and in some cases, no changes are even required.</li></ul><p><strong>Note</strong>: For all codes of this scheme, please refer to <a href="https://github.com/apache/incubator-inlong/tree/master/inlong-sort" target="_blank" rel="noopener noreferrer">Apache InLong Sort</a>, which can be downloaded and used in the upcoming version 1.2.0.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-introduction">2. Introduction<a class="hash-link" href="#2-introduction" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="21-requirements">2.1 Requirements<a class="hash-link" href="#21-requirements" title="Direct link to heading">​</a></h3><p>The main requirements of this solution are the completed inlong sort module transform (T) capability, including:</p><table><thead><tr><th align="center">Transform</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">Deduplication in the window</td><td align="center">Deduplicate data within a time window</td></tr><tr><td align="center">time window aggregation</td><td align="center">Aggregate data within a time window</td></tr><tr><td align="center">time format conversion</td><td align="center">Converts the value of a field to a string in the target time format</td></tr><tr><td align="center">field segmentation</td><td align="center">Split a field into multiple new fields by a delimiter</td></tr><tr><td align="center">string replacement</td><td align="center">Replace some or all of the contents of a string field</td></tr><tr><td align="center">Data filtering</td><td align="center">Discard or retain data that meets the filter conditions</td></tr><tr><td align="center">Content extraction</td><td align="center">Extract part of a field to create a new field</td></tr><tr><td align="center">Join</td><td align="center">Support two table join</td></tr><tr><td align="center">Value substitution</td><td align="center">Given a matching value, if the field's value is equal to that value, replace it with the target value</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="22-usage-scenarios">2.2 Usage Scenarios<a class="hash-link" href="#22-usage-scenarios" title="Direct link to heading">​</a></h3><p>Users of big data integration have transform requirements such as data transformation, connection and filtering in many business scenarios.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="23-design-goal">2.3 Design Goal<a class="hash-link" href="#23-design-goal" title="Direct link to heading">​</a></h3><p>This design needs to achieve the following goals:</p><ul><li>Functionality: Under InLong Sort's existing architecture and data flow model, it covers basic Transform capabilities and has the ability to expand rapidly.</li><li>Compatibility: The new InLong Sort data model is forward compatible to ensure that historical tasks can be configured and run properly.</li><li>Maintainability: The conversion of the InLong Sort data model to Flink SQL only needs to be implemented once. When there are new functional requirements later, this part does not need to be changed, even if there are changes, it can be supported with a small amount of changes.</li><li>Extensibility: When the open source Flink Connector or the built-in Flink SQL function does not meet the requirements, you can customize the Flink Connector and UDF to achieve its function expansion.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="24-basic-concepts">2.4 Basic Concepts<a class="hash-link" href="#24-basic-concepts" title="Direct link to heading">​</a></h3><p>The core concept refers to the explanation of terms in the outline design</p><table><thead><tr><th align="center">Name</th><th align="center">Meaning</th></tr></thead><tbody><tr><td align="center">InLong Dashboard</td><td align="center">Inlong front end management interface</td></tr><tr><td align="center">InLong Manager Client</td><td align="center">Wrap the interface in the manager for external user programs to call without going through the front-end inlong dashboard</td></tr><tr><td align="center">InLong Manager Openapi</td><td align="center">Inlong manager and external system call interface</td></tr><tr><td align="center">InLong Manager metaData</td><td align="center">Inlong manager metadata management, including metadata information of group and stream dimensions</td></tr><tr><td align="center">InLong Manager task manager</td><td align="center">Inlong manager manages the data source collection task module, manages agent task distribution, instruction distribution, and heartbeat reporting</td></tr><tr><td align="center">InLong Group</td><td align="center">Data flow group, including multiple data flows, one group represents one data access</td></tr><tr><td align="center">InLong Stream</td><td align="center">Data flow: a data flow has a specific flow direction</td></tr><tr><td align="center">Stream Source</td><td align="center">There are corresponding acquisition end and sink end in the stream. This design only involves the stream source</td></tr><tr><td align="center">Stream Info</td><td align="center">Abstract of data flow in sort, including various sources, transformations, destinations, etc. of the data flow</td></tr><tr><td align="center">Group Info</td><td align="center">Encapsulation of data flow in sort. A group info can contain multiple stream infos</td></tr><tr><td align="center">Node</td><td align="center">Abstraction of data source, data transformation and data destination in data synchronization</td></tr><tr><td align="center">Extract Node</td><td align="center">Source side abstraction of data synchronization</td></tr><tr><td align="center">Load Node</td><td align="center">Destination abstraction of data synchronization</td></tr><tr><td align="center">MySQL Extract Node</td><td align="center">MySQL data source abstraction</td></tr><tr><td align="center">Kafka Load Node</td><td align="center">Kafka data destination abstraction</td></tr><tr><td align="center">Transform Node</td><td align="center">Transformation process abstraction of data synchronization</td></tr><tr><td align="center">Aggregate Transform Node</td><td align="center">Data synchronization aggregation class transformation process abstraction</td></tr><tr><td align="center">Node Relation</td><td align="center">Relationship abstraction of nodes in data synchronization</td></tr><tr><td align="center">Field Relation</td><td align="center">Abstraction of the relationship between upstream and downstream node fields in data synchronization</td></tr><tr><td align="center">Function</td><td align="center">Abstraction of the relationship between upstream and downstream node fields in data synchronization</td></tr><tr><td align="center">Substring Function</td><td align="center">Abstraction of string interception function</td></tr><tr><td align="center">Filter Function</td><td align="center">Abstraction of data filter function</td></tr><tr><td align="center">Function Param</td><td align="center">Input parameter abstraction of function</td></tr><tr><td align="center">Constant Param</td><td align="center">Constant parameters</td></tr><tr><td align="center">Field Info</td><td align="center">Node field</td></tr><tr><td align="center">Meta FieldInfo</td><td align="center">Node meta information field</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="25-domain-model">2.5 Domain Model<a class="hash-link" href="#25-domain-model" title="Direct link to heading">​</a></h3><p>This design mainly involves the following entities: </p><p>Group, Stream, GroupInfo, StreamInfo, Node, NodeRelation, FieldRelation, Function, FilterFunction, SubstringFunction, FunctionParam, FieldInfo, MetaFieldInfo, MySQLExtractNode, KafkaLoadNode, etc.</p><p>For ease of understanding, this section will model and analyze the relationship between entities. Description of entity correspondence of domain model:</p><ul><li>One group corresponds to one group info</li><li>A group contains one or more streams</li><li>One stream corresponds to one StreamInfo</li><li>A GroupInfo contains one or more StreamInfo</li><li>A StreamInfo contains multiple nodes</li><li>A StreamInfo contains one or more NodeRelations</li><li>A NodeRelation contains one or more FieldRelations</li><li>A NodeRelation contains 0 or more FilterFunctions</li><li>A FieldRelation contains one function or one FieldInfo as the source field and one FieldInfo as the target field</li><li>A function contains one or more FunctionParams</li></ul><p>The above relationship can be represented by UML object relationship diagram as:</p><p><img loading="lazy" alt="sort_UML" src="/assets/images/sort_UML-896d751427509d769add998680df9516.png" width="2576" height="869" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="26-function-use-case-diagram">2.6 Function Use-case Diagram<a class="hash-link" href="#26-function-use-case-diagram" title="Direct link to heading">​</a></h3><p><img loading="lazy" alt="sort-usecase" src="/assets/images/sort-usecase-fb8639f9724899ab3afcbf35b8a21902.png" width="606" height="356" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-system-outline-design">3. System Outline Design<a class="hash-link" href="#3-system-outline-design" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="31-system-architecture-diagram">3.1 System Architecture Diagram<a class="hash-link" href="#31-system-architecture-diagram" title="Direct link to heading">​</a></h3><p><img loading="lazy" alt="architecture" src="/assets/images/architecture-b4c0fb3783a6ed2f2868f534df98e74b.png" width="461" height="741" class="img_ev3q"></p><ul><li>Serialization: Serialization Implementation Module</li><li>Deserialization: Deserialization Implementation Module</li><li>Flink Source: Custom Flink source implementation module</li><li>Flink Sink: Custom Flink sink implementation module</li><li>Transformation: Custom Transform implementation module</li><li>GroupInfo: Corresponding to Inlong group</li><li>StreamInfo: Corresponding to inlong stream</li><li>Node: Abstraction of data source, data conversion and data destination in data synchronization</li><li>FlinkSQLParser: SQL parser</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="32-inlong-sort-internal-operation-flow-chart">3.2 InLong Sort Internal Operation Flow Chart<a class="hash-link" href="#32-inlong-sort-internal-operation-flow-chart" title="Direct link to heading">​</a></h3><p><img loading="lazy" alt="sort-operation-flow" src="/assets/images/sort-operation-flow-77363f12a68a011beba26db9ccc6fedb.png" width="771" height="61" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="33-module-design">3.3 Module Design<a class="hash-link" href="#33-module-design" title="Direct link to heading">​</a></h3><p>This design only adds Flink connector and Flink SQL generator to the original system, and modifies the data model module.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="331-module-structure">3.3.1 Module Structure<a class="hash-link" href="#331-module-structure" title="Direct link to heading">​</a></h4><p><img loading="lazy" alt="sort-module-structure" src="/assets/images/sort-module-structure-4dd424ae93043cb912dba69c08590b33.png" width="771" height="1011" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="332-module-division">3.3.2 Module Division<a class="hash-link" href="#332-module-division" title="Direct link to heading">​</a></h4><p>Description of important module division:</p><table><thead><tr><th align="center">Name</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">FlinkSQLParser</td><td align="center">Used to generate Flink SQL core classes, including references to GroupInfo</td></tr><tr><td align="center">GroupInfo</td><td align="center">The internal abstraction of sort for inlong group is used to encapsulate the synchronization related information of the entire inlong group, including the reference to list\&lt;StreamInfo<!-- -->&gt;</td></tr><tr><td align="center">StreamInfo</td><td align="center">The internal abstraction of sort to inlong stream is used to encapsulate inlong stream synchronization related information, including references to list\&lt;node<!-- -->&gt;<!-- -->, list\&lt;NodeRelation<!-- -->&gt;</td></tr><tr><td align="center">Node</td><td align="center">The top-level interface of the synchronization node. Its subclass implementation is mainly used to encapsulate the data of the synchronization data source and the transformation node</td></tr><tr><td align="center">ExtractNode</td><td align="center">Data extract node abstraction, inherited from node</td></tr><tr><td align="center">LoadNode</td><td align="center">Data load node abstraction, inherited from node</td></tr><tr><td align="center">TransformNode</td><td align="center">Data transformation node abstraction, inherited from node</td></tr><tr><td align="center">NodeRelation</td><td align="center">Define relationships between nodes</td></tr><tr><td align="center">FieldRelation</td><td align="center">Define field relationships between nodes</td></tr><tr><td align="center">Function</td><td align="center">Abstract of T-ability execution function</td></tr><tr><td align="center">FilterFunction</td><td align="center">Function abstraction for data filtering, inherited from function</td></tr><tr><td align="center">SubstringFunction</td><td align="center">Used for string interception function abstraction, inherited from function</td></tr><tr><td align="center">FunctionParam</td><td align="center">Abstraction for function parameters</td></tr><tr><td align="center">ConstantParam</td><td align="center">Encapsulation of function constant parameters, inherited from FunctionParam</td></tr><tr><td align="center">FieldInfo</td><td align="center">The encapsulation of node fields can also be used as function input parameters, inherited from FunctionParam</td></tr><tr><td align="center">MetaFieldInfo</td><td align="center">The encapsulation of built-in fields is currently mainly used in the metadata field scenario of canal JSON, which is inherited from FieldInfo</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-detailed-system-design">4. Detailed System Design<a class="hash-link" href="#4-detailed-system-design" title="Direct link to heading">​</a></h2><p>The following describes the principle of SQL generation by taking MySQL synchronizing data to Kafka as an example</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="41-node-described-in-sql">4.1 Node Described in SQL<a class="hash-link" href="#41-node-described-in-sql" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="411-extractnode-described-in-sql">4.1.1 ExtractNode Described in SQL<a class="hash-link" href="#411-extractnode-described-in-sql" title="Direct link to heading">​</a></h4><p>The node configuration is:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> private Node buildMySQLExtractNode() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo()));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new MySqlExtractNode("1", "mysql_input", fields,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, null, "id",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                Collections.singletonList("tableName"), "localhost", "root", "password",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                "inlong", null, null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, null);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">mysql_1</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">with</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'connector'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'mysql-cdc-inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'hostname'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'localhost'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'username'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'root'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'password'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'password'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'database-name'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'table-name'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'tableName'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="412-transformnode--described-in-sql">4.1.2 TransformNode  Described in SQL<a class="hash-link" href="#412-transformnode--described-in-sql" title="Direct link to heading">​</a></h4><p>The node configuration is:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> List&lt;FilterFunction&gt; filters = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(EmptyOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        LessThanOperator.getInstance(), new ConstantParam(25)),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(AndOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        MoreThanOrEqualOperator.getInstance(), new ConstantParam(18))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        );</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">mysql_1</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">WHERE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain"> </span><span class="token number">25</span><span class="token plain"> </span><span class="token operator">AND</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&gt;=</span><span class="token plain"> </span><span class="token number">18</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="413-loadnode-described-in-sql">4.1.3 LoadNode Described in SQL<a class="hash-link" href="#413-loadnode-described-in-sql" title="Direct link to heading">​</a></h4><p>The node configuration is:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> private Node buildKafkaLoadNode(FilterStrategy filterStrategy) {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo())</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldRelation&gt; relations = Arrays</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                .asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldRelation(new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("name", new StringFormatInfo())),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldRelation(new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("age", new IntFormatInfo()))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FilterFunction&gt; filters = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(EmptyOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        LessThanOperator.getInstance(), new ConstantParam(25)),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(AndOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        MoreThanOrEqualOperator.getInstance(), new ConstantParam(18))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new KafkaLoadNode("2", "kafka_output", fields, relations, filters,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                filterStrategy, "topic1", "localhost:9092",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new CanalJsonFormat(), null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, "id");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">kafka_3</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">with</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'connector'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'kafka-inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'topic'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'topic1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'properties.bootstrap.servers'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'localhost:9092'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'format'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.ignore-parse-errors'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'true'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.map-null-key.mode'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'DROP'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.encode.decimal-as-plain-number'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'true'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.timestamp-format.standard'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'SQL'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.map-null-key.literal'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'null'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="42-field-t-described-in-sql">4.2 Field T Described in SQL<a class="hash-link" href="#42-field-t-described-in-sql" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="421-filter-operator">4.2.1 Filter operator<a class="hash-link" href="#421-filter-operator" title="Direct link to heading">​</a></h4><p>See 4.1 node configuration for relevant configurations</p><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">INSERT</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">INTO</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">kafka_3</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">mysql_1</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">WHERE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain"> </span><span class="token number">25</span><span class="token plain"> </span><span class="token operator">AND</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&gt;=</span><span class="token plain"> </span><span class="token number">18</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="422-watermark">4.2.2 Watermark<a class="hash-link" href="#422-watermark" title="Direct link to heading">​</a></h4><p>The complete configuration of GroupInfo is as follows:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">private Node buildMySqlExtractNode() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("ts", new TimestampFormatInfo()));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        WatermarkField wk = new WatermarkField(new FieldInfo("ts", new TimestampFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new StringConstantParam("1"),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new TimeUnitConstantParam(TimeUnit.MINUTE));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new MySqlExtractNode("1", "mysql_input", fields,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                wk, null, "id",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                Collections.singletonList("tableName"), "localhost", "root", "password",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                "inlong", null, null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, null);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private Node buildKafkaNode() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("ts", new TimestampFormatInfo()));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldRelation&gt; relations = Arrays</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                .asList(new FieldRelation(new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("name", new StringFormatInfo())),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldRelation(new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("age", new IntFormatInfo()))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new KafkaLoadNode("2", "kafka_output", fields, relations, null, null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                "topic", "localhost:9092", new JsonFormat(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                1, null, "id");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private NodeRelation buildNodeRelation(List&lt;Node&gt; inputs, List&lt;Node&gt; outputs) {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;String&gt; inputIds = inputs.stream().map(Node::getId).collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;String&gt; outputIds = outputs.stream().map(Node::getId).collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new NodeRelation(inputIds, outputIds);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    public GroupInfo getTestObject() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        Node input = buildMySqlExtractNode();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        Node output = buildKafkaNode();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        StreamInfo streamInfo = new StreamInfo("1", Arrays.asList(input, output), Collections.singletonList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                buildNodeRelation(Collections.singletonList(input), Collections.singletonList(output))));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new GroupInfo("1", Collections.singletonList(streamInfo));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release InLong 1.1.0]]></title>
            <link>https://inlong.apache.org/blog/2022/04/25/release-1.1.0</link>
            <guid>/2022/04/25/release-1.1.0</guid>
            <pubDate>Mon, 25 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities. InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities. InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="110-features-overview">1.1.0 Features Overview<a class="hash-link" href="#110-features-overview" title="Direct link to heading">​</a></h2><p>The 1.1.0-incubating just released mainly includes the following:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhanced-management-capabilities-for-manager">Enhanced management capabilities for manager<a class="hash-link" href="#enhanced-management-capabilities-for-manager" title="Direct link to heading">​</a></h3><ul><li>Added Manager Client to support the integration of InLong for creating data streams</li><li>Added ManagerCtl command-line tool to support viewing and creating data streams</li><li>Manager supports dispatching Agent tasks</li><li>Manager supports dispatching Sort Flink tasks</li><li>Manger data streams management, supports start, restart, pause operations</li><li>Manager plugin support</li><li>Manager metadata management supports using MySQL</li><li>The first phase of cluster management, unified cluster information registration</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="rich-data-nodes">Rich data nodes<a class="hash-link" href="#rich-data-nodes" title="Direct link to heading">​</a></h3><ul><li>Support Iceberg</li><li>Support ClickHouse</li><li>Support MySQL Binlog collection</li><li>Support Kafka ingestion</li><li>Sort Standalone supports multiple type streams</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tools-construction">Tools construction<a class="hash-link" href="#tools-construction" title="Direct link to heading">​</a></h3><ul><li>Dashboard plugin support</li><li>Kubernetes deployment optimization</li><li>Standalone deployment refactoring</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="system-upgrade">System Upgrade<a class="hash-link" href="#system-upgrade" title="Direct link to heading">​</a></h3><ul><li>Protocol Buffers upgrade</li><li>Unified version Maven version dependencies</li><li>Fixed a bunch of dependency CVEs</li><li>DataProxy supports PB compression protocol</li></ul><p>This version closed about 642+ issues, including four 23 features and 180 improvements.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="110-features-details">1.1.0 Features Details<a class="hash-link" href="#110-features-details" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="add-manager-client">Add Manager Client<a class="hash-link" href="#add-manager-client" title="Direct link to heading">​</a></h3><p>The newly added Manager Client defines common InLong Group/Stream operation interfaces, including task creation, viewing and deletion. Through Manager Client, users can build InLong into any third-party platform to achieve unified customized platform construction. The Manager Client is mainly designed and implemented by @kipshi, @gong, @ciscozhou, thanks to three contributors.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="add-managerctl-command-line-tool">Add ManagerCtl command line tool<a class="hash-link" href="#add-managerctl-command-line-tool" title="Direct link to heading">​</a></h3><p>ManagerCtl is developed based on Manager Client and is a command-line tool for manipulating InLong resources, which can further simplify the use of developers. ManagerCtl was contributed independently by @haifxu and includes guidelines including:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: managerctl [options] [command] [command options]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Options:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">-h, --help</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Get all command about managerctl.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Commands:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">create      Create resource by json file</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: create [options]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">​</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">describe      Display details of one or more resources</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: describe [options]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">​</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">list      Displays main information for one or more resources</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: list [options]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-supports-issuing-sort-tasks">Manager supports issuing Sort tasks<a class="hash-link" href="#manager-supports-issuing-sort-tasks" title="Direct link to heading">​</a></h3><p>In previous versions, after the user created the data group/stream task, Sort needed to submit it to the Flink cluster through the command line, and then perform data sorting. In version 1.1.0, we unified the start, stop, and suspend operations of Sort tasks to the Manager to complete. Users only need to configure the correct Flink cluster when the Manager is deployed. When the data stream is approved, Sort will be automatically started.
This part of the work is mainly contributed by @LvJiancheng.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-metadata-is-saved-to-zookeeper">Manager metadata is saved to ZooKeeper<a class="hash-link" href="#manager-metadata-is-saved-to-zookeeper" title="Direct link to heading">​</a></h3><p>InLong uses ZooKeeper to save data stream metadata, which increases the deployment threshold and operation and maintenance difficulty for developers and users.
In version 1.1.0, we save data stream metadata in DB by default, and ZooKeeper is only an optional solution in large-scale scenarios. Thanks to @kipshi @yunqingmoswu for contributing a PR to ZooKeeper.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-mysql-binlog-collection">Support MySQL Binlog collection<a class="hash-link" href="#support-mysql-binlog-collection" title="Direct link to heading">​</a></h3><p>Version 1.1.0 fully supports the collection of data from MySQL, and supports both incremental and full strategies. Users can collect MySQL data with simple configuration in InLong. This part of the work was contributed by @EMsnap.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-added-iceberg-clickhouse-kafka">Sort Added Iceberg, ClickHouse, Kafka<a class="hash-link" href="#sort-added-iceberg-clickhouse-kafka" title="Direct link to heading">​</a></h3><p>In version 1.1.0, the storage of data nodes for various scenarios has been added, including Iceberg, ClickHouse, and Kafka. The support of these three streams enriches the usage scenarios of InLong. New stream support, mainly contributed by @chantccc @KevinWen007 @healchow.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-standalone-supports-hive-elasticsearch-kafka">Sort Standalone supports Hive, Elasticsearch, Kafka<a class="hash-link" href="#sort-standalone-supports-hive-elasticsearch-kafka" title="Direct link to heading">​</a></h3><p>As mentioned in the previous version, for non-Flink environments, we can sort data streams through Sort Standalone. In version 1.1.0, we added support for Hive, ElasticSearch, Kafka, and expanded the usage scenarios of Sort Standalone. Sort Standalone is mainly contributed by @vernedeng @luchunliang.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="protocol-buffers-upgrade">Protocol Buffers upgrade<a class="hash-link" href="#protocol-buffers-upgrade" title="Direct link to heading">​</a></h3><p>All InLong components Protocol Buffers dependencies have been upgraded from 2.5.0 to 3.19.4. Thanks to @gosonzhang @doleyzi for their contributions, a lot of compatibility and testing work for Protocol Buffers upgrades.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inlong-on-kubernetes-optimization">InLong on Kubernetes optimization<a class="hash-link" href="#inlong-on-kubernetes-optimization" title="Direct link to heading">​</a></h3><p>The optimization work of InLong on Kubernetes mainly includes adding Audit, combing configuration, optimizing the use of message queues, optimizing the use of documents, etc., to facilitate the use of InLong on the cloud. Thanks to @shink for contributing to these optimizations.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard-plugin">Dashboard plugin<a class="hash-link" href="#dashboard-plugin" title="Direct link to heading">​</a></h3><p>In order to facilitate users to quickly build new data stream on Dashboard, Dashboard is support plugin in version 1.1.0. JavaScript developers who understand the plugin development guidelines can quickly expand new data stream. Thanks for this part of the work @leezng</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-features-and-bug-fixes">Other features and bug fixes<a class="hash-link" href="#other-features-and-bug-fixes" title="Direct link to heading">​</a></h3><p>For related content, please refer to the version <a href="https://github.com/apache/incubator-inlong/blob/master/CHANGES.md" target="_blank" rel="noopener noreferrer">release notes</a>, which list the features, enhancements and bug fixes of this version in detail, as well as specific contributors.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-follow-up-planning">Apache InLong(incubating) follow-up planning<a class="hash-link" href="#apache-inlongincubating-follow-up-planning" title="Direct link to heading">​</a></h2><p>In subsequent versions, we will support lightweight Sort, and expand more data sources and targets to cover more usage scenarios, including:</p><ul><li>Flink SQL support</li><li>Elasticsearch, HBase support</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release InLong 0.12.0]]></title>
            <link>https://inlong.apache.org/blog/2022/01/04/release-0.12.0</link>
            <guid>/2022/01/04/release-0.12.0</guid>
            <pubDate>Tue, 04 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[InLong: the sacred animal in Chinese myths stories, draws rivers into the sea, as a metaphor for the InLong system to provide data access capabilities.]]></description>
            <content:encoded><![CDATA[<p>InLong: the sacred animal in Chinese myths stories, draws rivers into the sea, as a metaphor for the InLong system to provide data access capabilities.</p><p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities. InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.
The 0.12.0-incubating just released mainly includes the following:</p><ul><li>Provide automatic, safe, reliable and high-performance data transmission capabilities, while supporting batch and streaming</li><li>Refactor the document structure of the official website to facilitate users to consult related documents based on the main line</li><li>The whole process supports Pulsar data flow, and completes the whole process coverage of high-performance and high-reliability scenarios</li><li>Full-process support indicators, including JMX and Prometheus output</li><li>The first phase of data audit and reconciliation, write audit data to MySQL</li></ul><p>This version closed about 120+ issues, including four major features and 35 improvements.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-introduction">Apache InLong(incubating) Introduction<a class="hash-link" href="#apache-inlongincubating-introduction" title="Direct link to heading">​</a></h3><p><a href="https://inlong.apache.org" target="_blank" rel="noopener noreferrer">Apache InLong</a> is a one-stop integration framework for massive data donated by Tencent to the Apache community.  It provides automatic,  safe,  reliable,  and high-performance data transmission capabilities to facilitate the construction of streaming-based data analysis,  modeling,  and applications.<br>
<!-- -->The Apache InLong project was originally called TubeMQ,  focusing on high-performance,  low-cost message queuing services.  In order to further release the surrounding ecological capabilities of TubeMQ,  we upgraded the project to InLong,  focusing on creating a one-stop integration framework for massive data.</p><p>Apache InLong uses TDBank internally used by Tencent as the prototype,  and relies on trillion-level data access and processing capabilities to integrate the entire process of data collection,  aggregation,  storage,  and sorting data processing.  It is simple to use,  flexible to expand,  stable and reliable characteristic.</p><img loading="lazy" src="/img/inlong-structure-en.png" align="center" alt="Apache InLong" class="img_ev3q"><p>Apache InLong serves the entire life cycle from data collection to landing,  and provides different processing modules according to different stages of data,  including the next modules:</p><ul><li><strong>inlong-agent</strong>,  data collection agent, supports reading regular logs from specified directories or files and reporting data one by one.  In the future,  DB collection and HTTP reporting capabilities will also be expanded.</li><li><strong>inlong-dataproxy</strong>,  a Proxy component based on Flume-ng,  supports data transmission blocking,  placing retransmission, and has the ability to forward received data to different MQ (message queues).</li><li><strong>inlong-tubemq</strong>,  Tencent's self-developed message queuing service,  focuses on high-performance storage and transmission of massive data in big data scenarios and has a relatively good core advantage in mass practice and low cost.</li><li><strong>inlong-sort</strong>,  after consuming data from different MQ services,  perform ETL processing,  and then aggregate and write the data into Apache Hive, ClickHouse,  Hbase,  IceBerg,  etc.</li><li><strong>inlong-manager</strong>, provides complete data service management and control capabilities,  including metadata,  OpenAPI,  task flow,  authority,  etc.</li><li><strong>inlong-website</strong>, a front-end page for managing data access,  simplifying the use of the entire InLong control platform.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-new-in-apache-inlongincubating-0120">What’s New in Apache InLong(incubating) 0.12.0<a class="hash-link" href="#whats-new-in-apache-inlongincubating-0120" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-support-apache-pulsar-data-cache">1. Support Apache Pulsar data cache<a class="hash-link" href="#1-support-apache-pulsar-data-cache" title="Direct link to heading">​</a></h4><p>In version 0.12.0, we have completed the data reporting capability of FileAgent→DataProxy→Pulsar→Sort. So far, InLong supports high-performance and high-reliability data access scenarios: Compared with the high-throughput TubeMQ, Apache Pulsar can provide better data consistency and is more suitable for scenarios that require extremely high data reliability. For example, finance and billing.</p><img loading="lazy" src="/img/pulsar-arch-en.png" align="center" alt="Report via Pulsar" class="img_ev3q"><p>Thanks to @healchow, @baomingyu, @leezng, @bruceneenhl, @ifndef-SleePy and others for their contributions to this feature. For more information, please refer to <a href="https://github.com/apache/" target="_blank" rel="noopener noreferrer">INLONG-1310</a>incubator-inlong/issues/1310), please refer to <!-- -->[Pulsar usage example]<!-- -->(<a href="https://inlong.apache." target="_blank" rel="noopener noreferrer">https://inlong.apache.</a> org/zh -CN/docs/next/quick_start/pulsar_example/) to get the usage guide.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-support-jmx-and-prometheus-metrics">2. Support JMX and Prometheus metrics<a class="hash-link" href="#2-support-jmx-and-prometheus-metrics" title="Direct link to heading">​</a></h4><p>In addition to the existing file output metrics, the various components of InLong began to gradually support the output of JMX and Prometheus metrics to improve the visibility of the entire system. Currently, modules including Agent, DataProxy, TubeMQ, Sort-Standalone, etc. already support the above metrics, and the documentation of metrics output by each module is being sorted out.</p><p>Thanks to @shink, @luchunliang, @EMsnap, @gosonzhang and others for their contributions. For related PRs, please see <a href="https://github.com/apache/incubator-inlong/issues/1712" target="_blank" rel="noopener noreferrer">INLONG-1712</a>, <!-- -->[INLONG-1786]<!-- --> (<a href="https://github.com/apache/incubator-inlong/issues/1786" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-inlong/issues/1786</a>), <a href="https://github.com/apache/incubator-inlong/issues/1796" target="_blank" rel="noopener noreferrer">INLONG-1796</a>, <!-- -->[INLONG-1827]<!-- --> (<a href="https://github.com/apache/incubator-inlong/issues/1827" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-inlong/issues/1827</a>), <a href="https://github.com/apache/incubator-inlong/issues/1851" target="_blank" rel="noopener noreferrer">INLONG-1851</a>, <!-- -->[INLONG-1926]<!-- --> (<a href="https://github.com/apache/incubator-inlong/issues/1926" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-inlong/issues/1926</a>).</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-function-extension-of-the-modules">3. Function extension of the modules<a class="hash-link" href="#3-function-extension-of-the-modules" title="Direct link to heading">​</a></h4><p>The Sort module adds support for Apache Doris storage and realizes the ability to load sorted data into Apache Doris, giving InLong one more storage option. In addition, in order to enrich the functions of the entire data access process, the Audit and Sort-Standalone modules have been added:</p><ul><li>The Audit module provides the ability to reconcile the entire process of data flow, and monitor the service quality of the system through data flow indicators;</li><li>Sort-Standalone module is a non-Flink-based data sorting module. It adds lightweight data sorting capabilities to the system, facilitating the rapid construction and use of businesses.</li></ul><p>The Audit and Sort-Standalone modules are still under development and will be released when the version is stable.</p><p>Thanks to @huzk8, @doleyzi, @luchunliang and others for their contributions, please refer to <a href="https://github.com/apache/incubator-inlong/issues/1821" target="_blank" rel="noopener noreferrer">INLONG-1821</a>, <!-- -->[INLONG-1738]<!-- -->( https: / /github.com/apache/incubator-inlong/issues/1738), <a href="https://github.com/apache/incubator-inlong/issues/1889" target="_blank" rel="noopener noreferrer">INLONG-1889</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="4-official-website-document-directory-reconstruction">4. Official website document directory reconstruction<a class="hash-link" href="#4-official-website-document-directory-reconstruction" title="Direct link to heading">​</a></h4><p>In addition to the improvement of functional modules in version 0.12.0, the official website structure and the use of documents have also been deeply adjusted, including the reconstruction of the document directory structure, supplementing and improving the function introduction of each module, adding document translation, and further improving the documentation of the InLong official website. Readability, to achieve quick search and easy reading. You can check the official website to understand this content. The document is still under construction. We welcome your valuable comments or suggestions.</p><p>Thanks to @bluewang, @dockerzhang, @healchow and others for their contributions, please refer to <a href="https://github.com/apache/incubator-inlong/issues/1711" target="_blank" rel="noopener noreferrer">INLONG-1711</a>, <!-- -->[INLONG-1740]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1740), <a href="https://github.com/apache/incubator-inlong/issues/1802" target="_blank" rel="noopener noreferrer">INLONG-1802</a>, <!-- -->[INLONG-1809]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1809), <a href="https://github.com/apache/incubator-inlong/issues/1810" target="_blank" rel="noopener noreferrer">INLONG-1810</a>, <!-- -->[INLONG-1815]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1815), <a href="https://github.com/apache/incubator-inlong/issues/1822" target="_blank" rel="noopener noreferrer">INLONG-1822</a>, <!-- -->[INLONG-1840]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1840), <a href="https://github.com/apache/incubator-inlong/issues/1856" target="_blank" rel="noopener noreferrer">INLONG-1856</a>, <!-- -->[INLONG-1861]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1861), <a href="https://github.com/apache/incubator-inlong/issues/1867" target="_blank" rel="noopener noreferrer">INLONG-1867</a>, <!-- -->[INLONG-1878]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1878), <a href="https://github.com/apache/incubator-inlong/issues/1901" target="_blank" rel="noopener noreferrer">INLONG-1901</a>, <!-- -->[INLONG-1939]<!-- -->(https: //gith ub.com/apache/incubator-inlong/issues/1939).</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="5-other-features-and-bug-fixes">5. Other features and bug fixes<a class="hash-link" href="#5-other-features-and-bug-fixes" title="Direct link to heading">​</a></h4><p>For related content, please refer to <a href="https://github.com/apache/incubator-inlong/blob/0.12.0-incubating-RC0/CHANGES.md" target="_blank" rel="noopener noreferrer">Version Release Notes</a>, which lists the detailed features of this version, Improvements, bug fixes, and specific contributors.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-follow-up-planning">Apache InLong(incubating) follow-up planning<a class="hash-link" href="#apache-inlongincubating-follow-up-planning" title="Direct link to heading">​</a></h3><p>In subsequent versions, we will further enhance the capabilities of InLong to cover more usage scenarios, including:</p><ul><li>Support link for data access ClickHouse</li><li>Support DB data collection</li><li>The second stage full link indicator audit function</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Release InLong 0.11.0]]></title>
            <link>https://inlong.apache.org/blog/2021/11/10/release-0.11.0</link>
            <guid>/2021/11/10/release-0.11.0</guid>
            <pubDate>Wed, 10 Nov 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong (incubating)  has been renamed from the original Apache TubeMQ (incubating) from 0.9.0.  With the name change,  InLong has also been upgraded from a single message queue to a one-stop integration framework for massive data.  InLong supports data collection,  aggregation,  caching,  and sorting,  users can import data from the data source to the real-time computing engine or land to offline storage with a simple configuration.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong (incubating)  has been renamed from the original Apache TubeMQ (incubating) from 0.9.0.  With the name change,  InLong has also been upgraded from a single message queue to a one-stop integration framework for massive data.  InLong supports data collection,  aggregation,  caching,  and sorting,  users can import data from the data source to the real-time computing engine or land to offline storage with a simple configuration.
The just-released version <code>0.11.0-incubating</code> is the third version after the name changed.  This version includes next features:</p><ul><li>Lower the user's threshold for use further.  Support all modules of InLong to be deployed on Kubernetes,  and refactor the official website,  so that users can more easily access related documents.</li><li>Support more usage scenarios,  increase the data flow direction of <code>Dataproxy -&gt; Pulsar</code>,  and cover scenarios with higher requirements for data integrity and consistency.</li><li>Supports SDKs in more languages for TubeMQ.  This version opens the production-level TubeMQ Go SDK, which is convenient for users who use the Go language to access</li></ul><p>This version closed more than 80 issues, including four significant features and 35 improvements.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-introduction">Apache InLong(incubating) Introduction<a class="hash-link" href="#apache-inlongincubating-introduction" title="Direct link to heading">​</a></h3><p><a href="https://inlong.apache.org" target="_blank" rel="noopener noreferrer">Apache InLong</a> is a one-stop integration framework for massive data donated by Tencent to the Apache community.  It provides automatic,  safe,  reliable,  and high-performance data transmission capabilities to facilitate the construction of streaming-based data analysis,  modeling,  and applications.<br>
<!-- -->The Apache InLong project was originally called TubeMQ,  focusing on high-performance,  low-cost message queuing services.  In order to further release the surrounding ecological capabilities of TubeMQ,  we upgraded the project to InLong,  focusing on creating a one-stop integration framework for massive data.</p><p>Apache InLong uses TDBank internally used by Tencent as the prototype,  and relies on trillion-level data access and processing capabilities to integrate the entire process of data collection,  aggregation,  storage,  and sorting data processing.  It is simple to use,  flexible to expand,  stable and reliable characteristic.</p><img loading="lazy" src="/img/inlong-structure-en.png" align="center" alt="Apache InLong" class="img_ev3q"><p>Apache InLong serves the entire life cycle from data collection to landing,  and provides different processing modules according to different stages of data,  including the next modules:</p><ul><li><strong>inlong-agent</strong>,  data collection agent, supports reading regular logs from specified directories or files and reporting data one by one.  In the future,  DB collection and HTTP reporting capabilities will also be expanded.</li><li><strong>inlong-dataproxy</strong>,  a Proxy component based on Flume-ng,  supports data transmission blocking,  placing retransmission, and has the ability to forward received data to different MQ (message queues).</li><li><strong>inlong-tubemq</strong>,  Tencent's self-developed message queuing service,  focuses on high-performance storage and transmission of massive data in big data scenarios and has a relatively good core advantage in mass practice and low cost.</li><li><strong>inlong-sort</strong>,  after consuming data from different MQ services,  perform ETL processing,  and then aggregate and write the data into Apache Hive, ClickHouse,  Hbase,  IceBerg,  etc.</li><li><strong>inlong-manager</strong>, provides complete data service management and control capabilities,  including metadata,  OpenAPI,  task flow,  authority,  etc.</li><li><strong>inlong-website</strong>, a front-end page for managing data access,  simplifying the use of the entire InLong control platform.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-new-in-apache-inlongincubating-0110">What’s New in Apache InLong(incubating) 0.11.0<a class="hash-link" href="#whats-new-in-apache-inlongincubating-0110" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="inlong-on-kubernetes">InLong on Kubernetes<a class="hash-link" href="#inlong-on-kubernetes" title="Direct link to heading">​</a></h4><p>Apache InLong includes multiple components such as data collection,  data aggregation,  data caching,  data sorting,  and cluster management and control.  In order to facilitate users to use and support cloud-native features,  all components currently support deployment in Kubernetes.
Thanks to @shink for contributing to this feature.  For specific details,  please refer to <a href="https://github.com/apache/incubator-inlong/issues/1308" target="_blank" rel="noopener noreferrer">INLONG-1308</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="open-up-dataproxy-pulsar-data-flow">Open up dataproxy-&gt;pulsar data flow<a class="hash-link" href="#open-up-dataproxy-pulsar-data-flow" title="Direct link to heading">​</a></h4><p>Before version 0.11.0,  InLong's data caching layer could only support TubeMQ.  TubeMQ is very suitable for scenarios with huge data volumes,  but in extreme scenarios,  there may be a small amount of data loss. To provide data reliability, the Inlong added support for Apache Pulsar in version 0.11.0.  Now InLong backend can support data flow <code>agent -&gt; dataProxy -&gt; tubeMQ/pulsar -&gt; sort.</code> The introduction of Pulsar makes the application scenarios covered by InLong more abundant,  which could meet the needs of more users.
Thanks to @baomingyu for his contribution to this feature.  For more details,  please refer to <a href="https://github.com/apache/incubator-inlong/issues/1330" target="_blank" rel="noopener noreferrer">INLONG-1330</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="go-sdk-for-inlong-tubemq">Go SDK for InLong TubeMQ<a class="hash-link" href="#go-sdk-for-inlong-tubemq" title="Direct link to heading">​</a></h4><p>Before version 0.11.0,  InLong TubeMQ supports SDKs in three languages:  Java,  C++,  and Python.  With more and more applications of Go language,  the demand for Go language SDK in the community is also increasing. Version 0.11.0 was officially introduced to the Go language SDK of TubeMQ.  The multilingual SDK is enriched,  and the difficulty of access and use for Go language users is also reduced.
Thanks to @TszKitLo40 for contributing to this feature. For more details, please refer to:</p><ul><li><a href="https://github.com/apache/incubator-inlong/issues/624" target="_blank" rel="noopener noreferrer">INLONG-624</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1570" target="_blank" rel="noopener noreferrer">INLONG-1578</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1584" target="_blank" rel="noopener noreferrer">INLONG-1584</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1666" target="_blank" rel="noopener noreferrer">INLONG-1666</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1682" target="_blank" rel="noopener noreferrer">INLONG-1682</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="refactor-the-official-website">refactor the official website<a class="hash-link" href="#refactor-the-official-website" title="Direct link to heading">​</a></h4><p>In version 0.11.0,  InLong uses Docusaurus to refactor the <a href="https://inlong.apache.org/" target="_blank" rel="noopener noreferrer">official website</a> to provide a more concise and intuitive document management and display.
Thanks to @leezng for his contribution to this feature. For more details,  please refer to:</p><ul><li><a href="https://github.com/apache/incubator-inlong/issues/1631" target="_blank" rel="noopener noreferrer">INLONG-1631</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1632" target="_blank" rel="noopener noreferrer">INLONG-1632</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1633" target="_blank" rel="noopener noreferrer">INLONG-1633</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1634" target="_blank" rel="noopener noreferrer">INLONG-1634</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1635" target="_blank" rel="noopener noreferrer">INLONG-1635</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1636" target="_blank" rel="noopener noreferrer">INLONG-1636</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1637" target="_blank" rel="noopener noreferrer">INLONG-1637</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1638" target="_blank" rel="noopener noreferrer">INLONG-1638</a></li></ul><p>In addition to the above major features,  InLong 0.11.0 version has other key improvements,  including but not limited to:</p><ul><li>Added contribution guidelines in the main Repo,  <a href="https://github.com/apache/incubator-inlong/issues/1623" target="_blank" rel="noopener noreferrer">INLONG-1623</a></li><li>Add Inlong-Manager to DataProxy configuration management, <a href="https://github.com/apache/incubator-inlong/issues/1595" target="_blank" rel="noopener noreferrer">INLONG-1595</a></li><li>Optimized the GitHub issue template, <a href="https://github.com/apache/incubator-inlong/issues/1585" target="_blank" rel="noopener noreferrer">INLONG-1585</a></li><li>Code Checkstyle optimization, <a href="https://github.com/apache/incubator-inlong/issues/1571" target="_blank" rel="noopener noreferrer">INLONG-1571</a>, <a href="https://github.com/apache/incubator-inlong/issues/1593" target="_blank" rel="noopener noreferrer">INLONG-1593</a>, <a href="https://github.com/apache/incubator-inlong/issues/1593" target="_blank" rel="noopener noreferrer">INLONG-1593</a>, <a href="https://github.com/apache/incubator-inlong/issues/1662" target="_blank" rel="noopener noreferrer">INLONG-1662</a></li><li>Agent introduces message filter, <a href="https://github.com/apache/incubator-inlong/issues/1641" target="_blank" rel="noopener noreferrer">INLONG-1641</a></li></ul><p>The 0.11.0 version also fixes ~45 bugs. Thanks to all the contributions who have contributed to the Inlong community (in no particular order):</p><ul><li>shink</li><li>baomingyu</li><li>TszKitLo40</li><li>leezng</li><li>ruanwenjun</li><li>leo65535</li><li>luchunliang</li><li>pierre94</li><li>EMsnap</li><li>dockerzhang</li><li>gosonzhang</li><li>healchow</li><li>guangxuCheng</li><li>yuanboliu</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-follow-up-planning">Apache InLong(incubating) follow-up planning<a class="hash-link" href="#apache-inlongincubating-follow-up-planning" title="Direct link to heading">​</a></h3><p>In the subsequent version planning of InLong, we will further release the capabilities of InLong to cover more usage scenarios, mainly including</p><ul><li>Support Apache Pulsar full link data access capabilities, including back-end processing and front-end management capabilities.</li><li>Support data flow such as ClickHouse,  Apache Iceberg,  Apache HBase, etc.</li></ul>]]></content:encoded>
        </item>
    </channel>
</rss>